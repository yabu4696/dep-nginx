upstream config {
    # コンテナのサービス名を指定すると名前解決してくれる
    server 127.0.0.1:8000 fail_timeout=0;
}

server {
    # 80ポートで待ち受け
    listen 80;
    server_name .wanto-item.com;

    location / {
        proxy_pass http://config;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }
    location /healthcheck.html {
            root /var/www/index/;
    }
    location /home_sitemap.xml {
            root /var/www/index/;
    }
    location /camera_sitemap.xml {
        root /var/www/index/;
    }
    location /lens_sitemap.xml {
        root /var/www/index/;
    }
    # 静的ファイルの要求をstaticfilesにルーティング
    location /static/(.+)$ {
        set file $1;
        resolver                  8.8.8.8;
        set $static_host          "s3.amazonaws.com";
        set $static_bucket_name   "wanto-static";
        set $static_access_key    ${AWS_ACCESS_KEY_ID};
        set $static_secret_key    ${AWS_SECRET_ACCESS_KEY};
        set_by_lua $signature '
            local date = ngx.http_time(ngx.time())
            local string_to_sign = ngx.req.get_method() .. "\\n\\n\\n" .. date .. "\\n/" .. ngx.var.static_bucket_name .. "/" .. ngx.var.file
            ngx.req.set_header("Date", date)
            digest = ngx.hmac_sha1(ngx.var.static_secret_key, string_to_sign)
            return ngx.encode_base64(digest)
        ';
 
        proxy_set_header Authorization   "AWS $static_access_key:$signature";
        proxy_set_header Host            "$static_bucket_name.$static_host";

        proxy_cache             czone;
        proxy_no_cache          $do_not_cache;
        proxy_cache_bypass      $do_not_cache;
        proxy_cache_key         $scheme://$host$uri$is_args$args;
        proxy_cache_valid       200 302 304 7d;
        proxy_cache_valid       404 1m;

        proxy_pass                       https://static_bucket_name.$static_host/$file;
 
    }
}